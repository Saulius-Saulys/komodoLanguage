KsmJs {
    Program = Expression*
    Expression = FunctionDefinition | Bool | While | For | If | Body | Return | Assignment | Operation | Brackets | Id | Number | String | Type

    Assignment = Type Id "=" Expression SemiColon -- full
        | Id "=" Expression SemiColon -- withoutType

    Return = "return" Expression SemiColon

    Operation =  Add | Subtract | Multiply | Divide | Increase | Equal | NotEqual | LessThen | LowerThenOrEqual | Greater | GreaterThenOrEqual | Not | FunctionCall | Value
    
    Add = Expression "+" Expression
    Subtract = Expression "-" Expression
    Multiply = Expression "*" Expression
    Divide = Expression "/" Expression
    Equal  = Expression "==" Expression
    NotEqual = Expression "!=" Expression
    LessThen  = Expression "<"  Expression
    LowerThenOrEqual = Expression "<=" Expression
    Greater  = Expression ">"  Expression
    GreaterThenOrEqual = Expression ">=" Expression
    Not = "!" Expression
    Increase = Expression "++"

    Brackets = "(" Expression ")"

    Body = "{" Expression* "}"

    FunctionCall = Id "(" Arguments ")"
    Arguments = ListOf<Expression, ",">

    FunctionDefinition  = Id "(" Params ")" "=>" Body
    Params = ListOf<Id, ",">

    If = "(" Operation ")" "?" Body ":" Body?
    For = "for" "(" Assignment Expression SemiColon Expression ")" Body
    While = "while" Brackets Body

    Value =  Bool | Number | String | Cypher
    Number = double | int
    Type = "string" | "double" | "int" | "cypher" | "bool"
    
    Id = letter+
    int = digit+
    double = digit+ "." digit+
    String = Quotes (~Quotes any)+ Quotes
    Cypher = AmazingEncryption (~AmazingEncryption any)+ AmazingEncryption
    Bool = "true" | "false"

    Quotes = "\""
    SemiColon = ";"
    AmazingEncryption = "__"

    space += comment
    comment = "#" (~"\n" any)*
}
